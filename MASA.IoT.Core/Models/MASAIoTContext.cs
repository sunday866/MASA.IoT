// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace MASA.IoT.WebApi.Models.Models;

public partial class MASAIoTContext : DbContext
{
    public MASAIoTContext(DbContextOptions<MASAIoTContext> options)
        : base(options)
    {
    }

    public virtual DbSet<IoTDeviceExtend> IoTDeviceExtend { get; set; }

    public virtual DbSet<IoTDeviceInfo> IoTDeviceInfo { get; set; }

    public virtual DbSet<IoTDeviceShadow> IoTDeviceShadow { get; set; }

    public virtual DbSet<IoTDevicewares> IoTDevicewares { get; set; }

    public virtual DbSet<IoTProductInfo> IoTProductInfo { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<IoTDeviceExtend>(entity =>
        {
            entity.Property(e => e.DeviceInfoId).ValueGeneratedNever();

            entity.HasOne(d => d.DeviceInfo).WithOne(p => p.IoTDeviceExtend)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_IoTDeviceExtend_IoTDeviceInfo");
        });

        modelBuilder.Entity<IoTDeviceInfo>(entity =>
        {
            entity.Property(e => e.Id).ValueGeneratedNever();

            entity.HasOne(d => d.ProductInfo).WithMany(p => p.IoTDeviceInfo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_IoTDeviceInfo_IoTProductInfo");
        });

        modelBuilder.Entity<IoTDeviceShadow>(entity =>
        {
            entity.HasKey(e => e.DeviceInfoId).HasName("PK_DeviceShadow");

            entity.Property(e => e.DeviceInfoId).ValueGeneratedNever();
        });

        modelBuilder.Entity<IoTDevicewares>(entity =>
        {
            entity.Property(e => e.Id).ValueGeneratedNever();
        });

        modelBuilder.Entity<IoTProductInfo>(entity =>
        {
            entity.Property(e => e.Id).ValueGeneratedNever();
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}